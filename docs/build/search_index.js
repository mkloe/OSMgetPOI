var documenterSearchIndex = {"docs":
[{"location":"#OSMgetPOI","page":"OSMgetPOI","title":"OSMgetPOI","text":"","category":"section"},{"location":"","page":"OSMgetPOI","title":"OSMgetPOI","text":"CurrentModule = OSMgetPOI\nDocTestSetup = quote\n    using OSMgetPOI\nend","category":"page"},{"location":"#Parsing-.osm-file","page":"OSMgetPOI","title":"Parsing .osm file","text":"","category":"section"},{"location":"","page":"OSMgetPOI","title":"OSMgetPOI","text":"delete_version_tags!(dict::Dict{AbstractString, AbstractString})\ndict_of_attributes(c::LightXML.XMLElement, name::String = LightXML.name(c))\nprocess_attributes(dict::Dict{String, String})\nassign_attr_to_poi_object!(poi::POIObject, attr::Dict{String, String})\ngenerate_temporary_file(osm_filename::String, poitype::POITypes.POIType)\nosm_to_dict(osm_filename::String, poitype::POITypes.POIType, excluded_keywords::Array{String} = [\"text\", \"bounds\"])","category":"page"},{"location":"#OSMgetPOI.delete_version_tags!-Tuple{Dict{AbstractString, AbstractString}}","page":"OSMgetPOI","title":"OSMgetPOI.delete_version_tags!","text":"delete_version_tags!(dict::Dict{AbstractString, AbstractString})::Dict{String, String}\n\nAuxilary function used in osm_to_dict to parse .osm file.\n\n\n\n\n\n","category":"method"},{"location":"#OSMgetPOI.dict_of_attributes","page":"OSMgetPOI","title":"OSMgetPOI.dict_of_attributes","text":"dict_of_attributes(c::LightXML.XMLElement, name::String = LightXML.name(c))::Dict{String, String}\n\nAuxilary function used in osm_to_dict to parse .osm file.\n\n\n\n\n\n","category":"function"},{"location":"#OSMgetPOI.process_attributes-Tuple{Dict{String, String}}","page":"OSMgetPOI","title":"OSMgetPOI.process_attributes","text":"process_attributes(dict::Dict{String, String})::Dict{String, Union{Int, String}}\n\nAuxilary function used in osm_to_dict to parse .osm file.\n\n\n\n\n\n","category":"method"},{"location":"#OSMgetPOI.assign_attr_to_poi_object!-Tuple{OSMgetPOI.POIObject, Dict{String, String}}","page":"OSMgetPOI","title":"OSMgetPOI.assign_attr_to_poi_object!","text":"assign_attr_to_poi_object!(poi::POIObject, attr::Dict{String, String})\n\nAuxilary function used in osm_to_dict to parse .osm file.\n\n\n\n\n\n","category":"method"},{"location":"#OSMgetPOI.generate_temporary_file-Tuple{String, OSMgetPOI.POITypes.POIType}","page":"OSMgetPOI","title":"OSMgetPOI.generate_temporary_file","text":"generate_temporary_file(osm_filename::String, poitype::POITypes.POIType)\n\nAuxilary function - it generates a temporary file for further processing and returns a filepath of this file Arguments:\n\nosm_filename - name of the temporary file thich is to be generated\npoitype - POIType for which the temporary file is to be genarated\n\n\n\n\n\n","category":"method"},{"location":"#OSMgetPOI.osm_to_dict","page":"OSMgetPOI","title":"OSMgetPOI.osm_to_dict","text":"osm_to_dict(osm_filename::String, poitype::POITypes.POIType, excluded_keywords::Array{String} = [\"text\", \"bounds\"])::Dict{POITypes.POIType, Dict{Int, POIObject}}\n\nAuxilary function - parses .osm file and returns a dictionary whose key is a ::POIType and value is a vector of parsed POIs. A single POI is represented as a POIObject type which is a mutable struct with fields defined in src/types.jl. Arguments:\n\nosm_filename - the name of the .osm file that the function parses (e.g. beijing.osm)\npoitype - a POIType for which the file is parsed\nexcluded_keywords - keywords in .osm file excluded from parsing. Suggested to use the default.\n\n\n\n\n\n","category":"function"},{"location":"#Vector-of-POIs","page":"OSMgetPOI","title":"Vector of POIs","text":"","category":"section"},{"location":"","page":"OSMgetPOI","title":"OSMgetPOI","text":"get_coordinates_of_way(object_data::Dict{Int, POIObject}, way_id::Int)\nget_coordinates(object_data::Dict{Int, POIObject}, poi_id::Int)\ncreate_poi_dataset(object_data::Dict{POITypes.POIType, Dict{Int, POIObject}})\ngenerate_poi_vectors(osm_filename::String, poitypes::POITypes.POIType...)","category":"page"},{"location":"#OSMgetPOI.get_coordinates_of_way-Tuple{Dict{Int64, OSMgetPOI.POIObject}, Int64}","page":"OSMgetPOI","title":"OSMgetPOI.get_coordinates_of_way","text":"get_coordinates_of_way(object_data::Dict{Int, POIObject}, way_id::Int)::Dict{String, Float64}\n\nAuxilary function used inside get_coordinates function. Arguments:\n\nobject_data - a vector of POI objects in which an element is located\nway - a way for which one wants to find a lat-lon coordinates, represented by POIObject.\n\n\n\n\n\n","category":"method"},{"location":"#OSMgetPOI.get_coordinates-Tuple{Dict{Int64, OSMgetPOI.POIObject}, Int64}","page":"OSMgetPOI","title":"OSMgetPOI.get_coordinates","text":"get_coordinates(object_data::Dict{Int, POIObject}, poi_id::Int)::Dict{String, Float64}\n\nAuxilary function - it returns lat and lon coordinates of a POI object. If not found, then they are 0. Arguments: \n\nobject_data - a vector of POI objects in which an element is located\nelement - a POI object for which the coordinates are to be found\n\n\n\n\n\n","category":"method"},{"location":"#OSMgetPOI.create_poi_dataset-Tuple{Dict{OSMgetPOI.POITypes.POIType, Dict{Int64, OSMgetPOI.POIObject}}}","page":"OSMgetPOI","title":"OSMgetPOI.create_poi_dataset","text":"create_poi_dataset(object_data::Dict{POITypes.POIType, Dict{Int, POIObject}})::Vector{ProcessedPOI}\n\nAuxilary function - it returns a processed dataset (vector of elements of type ProcessedPOI)  with the POIs of one POItype. Arguments:\n\nobject_data - it is a raw parsed set of POIObjects (output of osm_to_dict)\n\n\n\n\n\n","category":"method"},{"location":"#OSMgetPOI.generate_poi_vectors-Tuple{String, Vararg{OSMgetPOI.POITypes.POIType}}","page":"OSMgetPOI","title":"OSMgetPOI.generate_poi_vectors","text":"generate_poi_vectors(osm_filename::String, poitypes::POITypes.POIType...)::Vector{Vector{ProcessedPOI}}\n\nHigh level function - returns the vector of processed poi datasets. Each dataset is of a different POIType defined in the function arguments and is represented by a vector of ProcessedPOIs. Arguments:\n\nosm_filename - name of .osm file from which the POIs are processed and generated\npoitypes - all POITypes, for which the dataframe should be generated\n\n\n\n\n\n","category":"method"},{"location":"#Creating-dataframe-of-POIs-(one-POI-type)","page":"OSMgetPOI","title":"Creating dataframe of POIs (one POI type)","text":"","category":"section"},{"location":"","page":"OSMgetPOI","title":"OSMgetPOI","text":"columns(processed_objects::Vector{ProcessedPOI})\ncreate_df(processed_objects::Vector{ProcessedPOI}, df_columns::Vector{String} = String[])","category":"page"},{"location":"#OSMgetPOI.columns-Tuple{Vector{OSMgetPOI.ProcessedPOI}}","page":"OSMgetPOI","title":"OSMgetPOI.columns","text":"columns(processed_objects::Vector{ProcessedPOI})::Vector{String}\n\nAuxilary function - it returns a vector of all distinct osm tag keys which are used as colnames of the dataframe. Arguments:\n\nprocessed_objects - vector of processed POIs of one type (output of create_poi_dataset function)\n\n\n\n\n\n","category":"method"},{"location":"#OSMgetPOI.create_df","page":"OSMgetPOI","title":"OSMgetPOI.create_df","text":"create_df(processed_objects::Vector{ProcessedPOI}, df_columns::Vector{String} = String[])::DataFrame\n\nAuxilary function - it returns the dataframe with processed POIs of one POIType Arguments:\n\nprocessed_objects - vector of processed pois of one type \ndf_columns - vector of column names for the dataframe (output of columns function) \n\n\n\n\n\n","category":"function"},{"location":"#Creating-a-dataframe-of-all-POIs","page":"OSMgetPOI","title":"Creating a dataframe of all POIs","text":"","category":"section"},{"location":"","page":"OSMgetPOI","title":"OSMgetPOI","text":"columns_in_poi_vector(processed_objects_vector::Vector{Vector{ProcessedPOI}})\ncreate_poi_df(processed_objects_vector::Vector{Vector{ProcessedPOI}}, threshold::Float64 = 0.3)","category":"page"},{"location":"#OSMgetPOI.columns_in_poi_vector-Tuple{Vector{Vector{OSMgetPOI.ProcessedPOI}}}","page":"OSMgetPOI","title":"OSMgetPOI.columns_in_poi_vector","text":"columns_in_poi_vector(processed_objects_vector::Vector{Vector{ProcessedPOI}})::Vector{String}\n\nAuxilary function - it returns a vector of all distinct osm tag keys which are used as column names of the df. Arguments:\n\nprocessed_objects_vector - vector of processed pois of all types (output of generatepoivectors)\n\n\n\n\n\n","category":"method"},{"location":"#OSMgetPOI.create_poi_df","page":"OSMgetPOI","title":"OSMgetPOI.create_poi_df","text":"create_poi_df(processed_objects_vector::Vector{Vector{ProcessedPOI}}, threshold::Float64 = 0.3)::DataFrame\n\nMain function - it returns the dataframe of all POIs of all configured POITypes Arguments:\n\nprocessed_objects_vector - the vector of processed pois of all POITypes\nthreshold - a minimum fraction of non-missing values in a column\n\n\n\n\n\n","category":"function"},{"location":"#Creating-a-dataframe-of-all-POIs-from-.osm-file","page":"OSMgetPOI","title":"Creating a dataframe of all POIs from .osm file","text":"","category":"section"},{"location":"","page":"OSMgetPOI","title":"OSMgetPOI","text":"create_df_from_osm_file(osm_filename::String, threshold::Float64 = 0.3, poitypes::POITypes.POIType...)","category":"page"},{"location":"#OSMgetPOI.create_df_from_osm_file","page":"OSMgetPOI","title":"OSMgetPOI.create_df_from_osm_file","text":"create_df_from_osm_file(osm_filename::String, threshold::Float64 = 0.3, poitypes::POITypes.POIType...)::DataFrame\n\nMain function - it returns the dataframe of all POIs of all configured POITypes from the .osm file.\n\nArguments:\n\nosm_filename - path to .osm file from which the POIs are processed and generated\nthreshold - a minimum fraction of non-missing values in a column \npoitypes - all POITypes, for which the dataframe should be generated\n\n\n\n\n\n","category":"function"},{"location":"#Filtering-dataframe-columns","page":"OSMgetPOI","title":"Filtering dataframe columns","text":"","category":"section"},{"location":"","page":"OSMgetPOI","title":"OSMgetPOI","text":"filter_columns_by_threshold(dframe::DataFrame, threshold::Float64 = 0.5)","category":"page"},{"location":"#OSMgetPOI.filter_columns_by_threshold","page":"OSMgetPOI","title":"OSMgetPOI.filter_columns_by_threshold","text":"filter_columns_by_threshold(dframe::DataFrame, threshold::Float64 = 0.5)::DataFrame\n\nMain function - it filters columns of the poi dataframe and returns a dataframe with those columns, whose fraction of non-missing values exceeds the threshold value Arguments:\n\ndframe - a DataFrame with POIs\nthreshold - a minimum fraction of non-missing values in a column \n\n\n\n\n\n","category":"function"}]
}
